#!/bin/bash

# Bash Run Command script for custom prompt

# Prompt style related constants
declare -r COMMIT_STYLE="\[\e[33m\]"
declare -r PROMPT_STYLE="\[\e[36m\]"
declare -r RUBY_STYLE="\[\e[95m\]"
declare -r CLEAR_STYLE="\[\e[0m\]"

git_commit_id() {
  local commit_id=$(git rev-parse --short HEAD 2> /dev/null)
  if [[ -n "${commit_id}" ]]; then
    echo "─┤${commit_id}│"
  fi
}

ruby_info() {
  local current_directory="$(pwd)"
  local is_ruby_project_dir=false

  while [[ "${current_directory}" != "/" ]]; do
    if [ -f "${current_directory}/.ruby-version" ]; then
      is_ruby_project_dir=true
      break
    fi

    current_directory="$(dirname "$current_directory")"
  done

  if [[ "${is_ruby_project_dir}" = true ]]; then
    local ruby_text='ruby'

    if [[ -n "$(command -v ruby)" ]]; then
      ruby_text="$(ruby --version | grep -oP "(ruby (\.?\d+){1,3})")"
    fi

    echo "«${ruby_text}»"
  fi
}

# Source global definitions
if [ -f /etc/bashrc ]; then
  source /etc/bashrc
fi

# Source machine-specific configuration
if [ -f "${HOME}/.bashrc.local" ]; then
  source "${HOME}/.bashrc.local"
fi

# Get bash aliases from file if there is one
if [ -f "${HOME}/.bash_aliases" ]; then
  source "${HOME}/.bash_aliases"
fi

# Define vim/vi as the default editor, if available
if [[ -n "$(command -v vimx)" ]]; then
  export EDITOR=vimx
elif [[ -n "$(command -v vim)" ]]; then
  export EDITOR=vim
elif [[ -n "$(command -v vi)" ]]; then
  export EDITOR=vi
fi

# Export options for __git_ps1 command
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWCOLORHINTS=true
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_DESCRIBE_STYLE="branch"
source "${HOME}/.git-prompt.sh"

# Bash prompt (PS1)
GIT_COMMIT="${COMMIT_STYLE}\$(git_commit_id)${CLEAR_STYLE}"
RUBY_INFO="${RUBY_STYLE}\$(ruby_info)${CLEAR_STYLE}"
UPPER_START="\n${PROMPT_STYLE}┌┤\w│${CLEAR_STYLE}"
LOWER_START="\n${PROMPT_STYLE}└─▶ \\\$ ${CLEAR_STYLE}"
UPPER_END="${GIT_COMMIT} ${RUBY_INFO}"
PROMPT_COMMAND='__git_ps1 "${UPPER_START}" "${UPPER_END}${LOWER_START}"'
